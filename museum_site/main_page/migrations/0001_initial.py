# Generated by Django 4.2.3 on 2023-08-18 14:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('hall_id', models.AutoField(primary_key=True, serialize=False)),
                ('hall_name', models.CharField(max_length=45, unique=True)),
                ('hall_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('floor_number', models.IntegerField()),
            ],
            options={
                'db_table': 'hall',
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'statuses',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Exposition',
            fields=[
                ('exposition_id', models.AutoField(primary_key=True, serialize=False)),
                ('exposition_name', models.CharField(max_length=45, unique=True)),
                ('exposition_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('id_hall', models.ForeignKey(db_column='id_hall', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.hall')),
            ],
            options={
                'db_table': 'exposition',
                'unique_together': {('exposition_id', 'id_hall')},
            },
        ),
        migrations.CreateModel(
            name='Exhibit',
            fields=[
                ('exhibit_id', models.AutoField(primary_key=True, serialize=False)),
                ('exhibit_name', models.CharField(max_length=45, unique=True)),
                ('exhibit_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('exhibit_author', models.CharField(blank=True, max_length=45, null=True)),
                ('setting_date', models.DateField(blank=True, null=True)),
                ('id_status', models.ForeignKey(db_column='id_status', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.statuses')),
            ],
            options={
                'db_table': 'exhibit',
                'unique_together': {('exhibit_id', 'id_status')},
            },
        ),
        migrations.CreateModel(
            name='ExpositionExhibits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_exhibit_exposition', models.ForeignKey(db_column='id_exhibit_exposition', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.exhibit')),
                ('id_exposition', models.ForeignKey(db_column='id_exposition', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.exposition')),
            ],
            options={
                'db_table': 'exposition_exhibits',
                'unique_together': {('id_exposition', 'id_exhibit_exposition')},
            },
        ),
        migrations.CreateModel(
            name='ExhibitTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_exhibit_tag', models.ForeignKey(db_column='id_exhibit_tag', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.exhibit')),
                ('id_tag', models.ForeignKey(db_column='id_tag', on_delete=django.db.models.deletion.DO_NOTHING, to='main_page.tags')),
            ],
            options={
                'db_table': 'exhibit_tags',
                'unique_together': {('id_tag', 'id_exhibit_tag')},
            },
        ),
    ]
